{"ast":null,"code":"import _toConsumableArray from\"/Users/sheetalturaga/JuliaHan-SheetalTuraga-BattleShip-Project2/other_implementation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import generateEmptyBoard from'./PlayerBoardAction';import{incrementCounter,checkIfAllShipsHit,destroyShips}from'./PlayerBoardAction';export default function PlayerBoardReducer(state,action){if(state===undefined){return generateEmptyBoard();}if(action.type===\"CREATE_GAME_BOARD\"){alert(\"created a game board!\");}// if (action.boardType === \"computer\") {\n//     return state;\n// }\nif(action.type==='onClick'){var value=state[action.x][action.y];var boardType=action.boardType;if(boardType==='computer'){// const xCoord = generateRandomNumber(0, state.length);\n// const yCoord = generateRandomNumber(0, state.length);\n// while (checkIfValidCoordinate != true) {\n//     const xCoord = generateRandomNumber(0, state.length);\n//     const yCoord = generateRandomNumber(0, state.length);\n// }\n// state[xCoord][yCoord] = 'Y';\nreturn _toConsumableArray(state);}// if (value === 'X') {\n//     state[action.x][action.y] = 'O';\n// } else {\n//     state[action.x][action.y] = 'X';\n// }\n// check winning condition\nreturn _toConsumableArray(state);}if(action.type==='RESET'||action.type==='RESET_GAMEBOARD_ONLY'){for(var i=0;i<state.length;i++){for(var j=0;j<state.length;j++){state[i][j]='';}}return _toConsumableArray(state);}return state;}","map":{"version":3,"sources":["/Users/sheetalturaga/JuliaHan-SheetalTuraga-BattleShip-Project2/other_implementation/src/reducers/PlayerBoardReducer.js"],"names":["generateEmptyBoard","incrementCounter","checkIfAllShipsHit","destroyShips","PlayerBoardReducer","state","action","undefined","type","alert","value","x","y","boardType","i","length","j"],"mappings":"mNACA,MAAOA,CAAAA,kBAAP,KAA+B,qBAA/B,CACA,OAAQC,gBAAR,CAA0BC,kBAA1B,CAA8CC,YAA9C,KAAiE,qBAAjE,CAEA,cAAe,SAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmCC,MAAnC,CAA2C,CAEtD,GAAID,KAAK,GAAKE,SAAd,CAAyB,CACrB,MAAOP,CAAAA,kBAAkB,EAAzB,CAEH,CAED,GAAIM,MAAM,CAACE,IAAP,GAAgB,mBAApB,CAAyC,CACrCC,KAAK,CAAC,uBAAD,CAAL,CACH,CACD;AACA;AACA;AACA,GAAIH,MAAM,CAACE,IAAP,GAAgB,SAApB,CAA+B,CAC3B,GAAME,CAAAA,KAAK,CAAGL,KAAK,CAACC,MAAM,CAACK,CAAR,CAAL,CAAgBL,MAAM,CAACM,CAAvB,CAAd,CACA,GAAMC,CAAAA,SAAS,CAAGP,MAAM,CAACO,SAAzB,CAEA,GAAIA,SAAS,GAAK,UAAlB,CAA8B,CAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAWR,KAAX,EACH,CAED;AACA;AACA;AACA;AACA;AACA;AAEA,0BAAWA,KAAX,EACH,CAED,GAAIC,MAAM,CAACE,IAAP,GAAgB,OAAhB,EAA2BF,MAAM,CAACE,IAAP,GAAgB,sBAA/C,CAAuE,CACnE,IAAK,GAAIM,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGT,KAAK,CAACU,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGX,KAAK,CAACU,MAA1B,CAAkCC,CAAC,EAAnC,CAAsC,CAClCX,KAAK,CAACS,CAAD,CAAL,CAASE,CAAT,EAAc,EAAd,CACH,CACJ,CACD,0BAAWX,KAAX,EACH,CACD,MAAOA,CAAAA,KAAP,CACH","sourcesContent":["\nimport generateEmptyBoard from './PlayerBoardAction';\nimport {incrementCounter, checkIfAllShipsHit, destroyShips} from './PlayerBoardAction';\n\nexport default function PlayerBoardReducer(state, action) {\n    \n    if (state === undefined) {\n        return generateEmptyBoard()\n\n    }\n\n    if (action.type === \"CREATE_GAME_BOARD\") {\n        alert(\"created a game board!\")\n    }\n    // if (action.boardType === \"computer\") {\n    //     return state;\n    // }\n    if (action.type === 'onClick') {\n        const value = state[action.x][action.y];\n        const boardType = action.boardType;\n\n        if (boardType === 'computer') {\n            // const xCoord = generateRandomNumber(0, state.length);\n            // const yCoord = generateRandomNumber(0, state.length);\n            // while (checkIfValidCoordinate != true) {\n            //     const xCoord = generateRandomNumber(0, state.length);\n            //     const yCoord = generateRandomNumber(0, state.length);\n            // }\n            // state[xCoord][yCoord] = 'Y';\n            return [...state];\n        }\n        \n        // if (value === 'X') {\n        //     state[action.x][action.y] = 'O';\n        // } else {\n        //     state[action.x][action.y] = 'X';\n        // }\n        // check winning condition\n\n        return [...state];\n    }\n\n    if (action.type === 'RESET' || action.type === 'RESET_GAMEBOARD_ONLY') {\n        for (let i = 0; i < state.length; i++) {\n            for (let j = 0; j < state.length; j++){\n                state[i][j] = '';\n            }\n        }\n        return [...state];\n    }\n    return state;\n}\n"]},"metadata":{},"sourceType":"module"}