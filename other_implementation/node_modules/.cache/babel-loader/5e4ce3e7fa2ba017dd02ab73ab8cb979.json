{"ast":null,"code":"import generateEmptyBoard from'./ComputerBoardAction';import{checkBoardIfValidShips,winOrLose,resetArray,resetCounter,resetMapOfShipCoords,incrementCounter,checkIfAllShipsHit,destroyShips}from'./ComputerBoardAction';export default function ComputerBoardReducer(state,action){if(state===undefined){state=generateEmptyBoard();while(!checkBoardIfValidShips(state)){console.log(\"here\");resetArray();resetMapOfShipCoords();state=generateEmptyBoard();}return state;}if(action.type==='onClick'){var value=state.gameBoard[action.x][action.y];var boardType=action.boardType;if(boardType==='player'){return state;}if(value==='sc'){incrementCounter('scout');checkIfAllShipsHit('scout')?destroyShips(state,'scout'):state.gameBoard[action.x][action.y]='O';}else if(value==='sb'){incrementCounter('submarine');checkIfAllShipsHit('submarine')?destroyShips(state,'submarine'):state.gameBoard[action.x][action.y]='O';}else if(value==='de'){incrementCounter('destroyer');checkIfAllShipsHit('destroyer')?destroyShips(state,'destroyer'):state.gameBoard[action.x][action.y]='O';}else if(value==='ac'){incrementCounter('aircraft');checkIfAllShipsHit('aircraft')?destroyShips(state,'aircraft'):state.gameBoard[action.x][action.y]='O';}else if(value==='O'){state.gameBoard[action.x][action.y]='O';}else if(value===''){state.gameBoard[action.x][action.y]='X';}else{if(winOrLose){alert(\"Game Over! YOU WON!\");}else{return state;}}state.isPlayerTurn=false;return state;}if(action.type==='RESET'||action.type==='RESET_GAMEBOARD_ONLY'){state=generateEmptyBoard();resetMapOfShipCoords();resetCounter();return state;}return state;}","map":{"version":3,"sources":["/Users/sheetalturaga/JuliaHan-SheetalTuraga-BattleShip-Project2/other_implementation/src/reducers/ComputerBoardReducer.js"],"names":["generateEmptyBoard","checkBoardIfValidShips","winOrLose","resetArray","resetCounter","resetMapOfShipCoords","incrementCounter","checkIfAllShipsHit","destroyShips","ComputerBoardReducer","state","action","undefined","console","log","type","value","gameBoard","x","y","boardType","alert","isPlayerTurn"],"mappings":"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","sourcesContent":["import generateEmptyBoard from './ComputerBoardAction';\nimport {checkBoardIfValidShips, winOrLose, resetArray, resetCounter, resetMapOfShipCoords, incrementCounter, checkIfAllShipsHit, destroyShips} from './ComputerBoardAction';\n\n\n\nexport default function ComputerBoardReducer(state, action) {\n    if (state === undefined) {\n        state = generateEmptyBoard();\n        while (!checkBoardIfValidShips(state)) {\n            console.log(\"here\");\n            resetArray();\n            resetMapOfShipCoords();\n            state = generateEmptyBoard();\n        }\n        return state;\n    }\n    if (action.type === 'onClick') {\n        const value = state.gameBoard[action.x][action.y];\n        const boardType = action.boardType;\n        if (boardType === 'player') {\n            return state;\n        }\n        if (value === 'sc') {\n            incrementCounter('scout');\n            checkIfAllShipsHit('scout') ? destroyShips(state, 'scout') : state.gameBoard[action.x][action.y] = 'O';\n        } else if (value === 'sb') {\n            incrementCounter('submarine');\n            checkIfAllShipsHit('submarine') ? destroyShips(state, 'submarine') : state.gameBoard[action.x][action.y] = 'O';\n        } else if (value === 'de') {\n            incrementCounter('destroyer');\n            checkIfAllShipsHit('destroyer') ? destroyShips(state, 'destroyer') : state.gameBoard[action.x][action.y] = 'O';\n        } else if (value === 'ac') {\n            incrementCounter('aircraft');\n            checkIfAllShipsHit('aircraft') ? destroyShips(state, 'aircraft') : state.gameBoard[action.x][action.y] = 'O';\n        } else if (value === 'O') {\n            state.gameBoard[action.x][action.y] = 'O';\n        } else if (value === '') {\n            state.gameBoard[action.x][action.y] = 'X';\n        } else {\n            if (winOrLose) {\n                alert (\"Game Over! YOU WON!\")\n            } else {\n                return state;\n            }\n        }\n        state.isPlayerTurn = false;\n        \n        return state;\n    }\n    \n    \n\n    if (action.type === 'RESET' || action.type === 'RESET_GAMEBOARD_ONLY') {\n        state = generateEmptyBoard();\n        resetMapOfShipCoords();\n        resetCounter();\n        return state;\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}