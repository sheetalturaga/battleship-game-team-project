{"ast":null,"code":"import generateEmptyBoard, { checkIfValidCoordinate } from './PlayerBoardAction';\nimport { generateRandomNumber, incrementCounter, checkIfAllShipsHit, destroyShips, addUsedSquare } from './PlayerBoardAction';\nexport default function PlayerBoardReducer(state, action) {\n  if (state === undefined) {\n    return generateEmptyBoard();\n  }\n\n  if (action.type === \"CREATE_GAME_BOARD\") {\n    alert(\"created a game board!\");\n  } // if (action.boardType === \"computer\") {\n  //     return state;\n  // }\n\n\n  if (action.type === 'onClick') {\n    const value = state[action.x][action.y];\n    const boardType = action.boardType;\n\n    if (boardType === 'computer') {\n      let xCoord = generateRandomNumber(0, state.length - 1);\n      let yCoord = generateRandomNumber(0, state.length - 1);\n\n      while (!checkIfValidCoordinate(state, xCoord, yCoord)) {\n        xCoord = generateRandomNumber(0, state.length - 1);\n        yCoord = generateRandomNumber(0, state.length - 1);\n        continue;\n      }\n\n      if (state[xCoord][yCoord] === 'sct') {\n        incrementCounter('scout');\n        checkIfAllShipsHit('scout') ? destroyShips(state, 'scout') : state[xCoord][yCoord] = 'O';\n\n        if (state[xCoord][yCoord] = 'O') {\n          addUsedSquare(xCoord, yCoord);\n        }\n      } else if (state[xCoord][yCoord] === 'sbe') {\n        incrementCounter('submarine');\n        checkIfAllShipsHit('submarine') ? destroyShips(state, 'submarine') : state[xCoord][yCoord] = 'O';\n\n        if (state[xCoord][yCoord] = 'O') {\n          addUsedSquare(xCoord, yCoord);\n        }\n      } else if (state[xCoord][yCoord] === 'der') {\n        incrementCounter('destroyer');\n        checkIfAllShipsHit('destroyer') ? destroyShips(state, 'destroyer') : state[xCoord][yCoord] = 'O';\n\n        if (state[xCoord][yCoord] = 'O') {\n          addUsedSquare(xCoord, yCoord);\n        }\n      } else if (state[xCoord][yCoord] === 'act') {\n        incrementCounter('aircraft');\n        checkIfAllShipsHit('aircraft') ? destroyShips(state, 'aircraft') : state[xCoord][yCoord] = 'O';\n\n        if (state[xCoord][yCoord] = 'O') {\n          addUsedSquare(xCoord, yCoord);\n        } // } else if (state[xCoord][yCoord] === 'O') {\n        //     state[xCoord][yCoord] = 'O';\n\n      } else {\n        state[xCoord][yCoord] = 'X';\n        addUsedSquare(xCoord, yCoord);\n      }\n\n      if (checkIfAllShipsHit('scout') && checkIfAllShipsHit('submarine') && checkIfAllShipsHit('aircraft') && checkIfAllShipsHit('destroyer')) {\n        alert(\"Game Over! YOU WON!\");\n      }\n    }\n\n    return [...state];\n  }\n\n  if (action.type === 'RESET' || action.type === 'RESET_GAMEBOARD_ONLY') {\n    state = generateEmptyBoard();\n    return state;\n  }\n\n  return state;\n}\n_c = PlayerBoardReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerBoardReducer\");","map":{"version":3,"sources":["/Users/sheetalturaga/JuliaHan-SheetalTuraga-BattleShip-Project2/other_implementation/src/reducers/PlayerBoardReducer.js"],"names":["generateEmptyBoard","checkIfValidCoordinate","generateRandomNumber","incrementCounter","checkIfAllShipsHit","destroyShips","addUsedSquare","PlayerBoardReducer","state","action","undefined","type","alert","value","x","y","boardType","xCoord","length","yCoord"],"mappings":"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","sourcesContent":["import generateEmptyBoard, { checkIfValidCoordinate } from './PlayerBoardAction';\nimport {generateRandomNumber, incrementCounter, checkIfAllShipsHit, destroyShips, addUsedSquare} from './PlayerBoardAction';\n\nexport default function PlayerBoardReducer(state, action) {\n    \n    if (state === undefined) {\n        return generateEmptyBoard()\n\n    }\n\n    if (action.type === \"CREATE_GAME_BOARD\") {\n        alert(\"created a game board!\")\n    }\n    // if (action.boardType === \"computer\") {\n    //     return state;\n    // }\n    if (action.type === 'onClick') {\n        const value = state[action.x][action.y];\n        const boardType = action.boardType;\n\n        if (boardType === 'computer') {\n            let xCoord = generateRandomNumber(0, state.length - 1);\n            let yCoord = generateRandomNumber(0, state.length - 1);\n            while (!checkIfValidCoordinate(state, xCoord, yCoord)) {\n                xCoord = generateRandomNumber(0, state.length - 1);\n                yCoord = generateRandomNumber(0, state.length - 1);\n                continue;\n            }\n\n            if (state[xCoord][yCoord] === 'sct') {\n                incrementCounter('scout');\n                checkIfAllShipsHit('scout') ? destroyShips(state, 'scout') : state[xCoord][yCoord] = 'O';\n                if (state[xCoord][yCoord] = 'O') {\n                addUsedSquare(xCoord, yCoord)}\n            } else if (state[xCoord][yCoord] === 'sbe') {\n                incrementCounter('submarine');\n                checkIfAllShipsHit('submarine') ? destroyShips(state, 'submarine') : state[xCoord][yCoord] = 'O';\n                if (state[xCoord][yCoord] = 'O') {\n                    addUsedSquare(xCoord, yCoord)}\n            } else if (state[xCoord][yCoord] === 'der') {\n                incrementCounter('destroyer');\n                checkIfAllShipsHit('destroyer') ? destroyShips(state, 'destroyer') : state[xCoord][yCoord] = 'O';\n                if (state[xCoord][yCoord] = 'O') {\n                    addUsedSquare(xCoord, yCoord)}\n            } else if (state[xCoord][yCoord] === 'act') {\n                incrementCounter('aircraft');\n                checkIfAllShipsHit('aircraft') ? destroyShips(state, 'aircraft') : state[xCoord][yCoord] = 'O';\n                if (state[xCoord][yCoord] = 'O') {\n                    addUsedSquare(xCoord, yCoord)}\n            \n                // } else if (state[xCoord][yCoord] === 'O') {\n            //     state[xCoord][yCoord] = 'O';\n            } else {\n                state[xCoord][yCoord] = 'X';\n                addUsedSquare(xCoord, yCoord);\n            }\n            if (checkIfAllShipsHit('scout') &&\n            checkIfAllShipsHit('submarine') &&\n            checkIfAllShipsHit('aircraft') && \n            checkIfAllShipsHit('destroyer')) {\n                alert(\"Game Over! YOU WON!\")\n            }\n        }\n\n        return [...state];\n    }\n\n    if (action.type === 'RESET' || action.type === 'RESET_GAMEBOARD_ONLY') {\n        state = generateEmptyBoard();\n        return state;\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}