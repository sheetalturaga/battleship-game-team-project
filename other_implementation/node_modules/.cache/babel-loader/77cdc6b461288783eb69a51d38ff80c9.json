{"ast":null,"code":"//TODO\n//1. Generate ai player\n//2. turn sunk ships black GOOD\n//3. tracking GOOD and \n//4. return winner \n//5. two game modes, free play and normal game\n//6.Overlapping ships\nimport generateEmptyBoard from './ComputerBoardAction';\nimport { incrementCounter, checkIfAllShipsHit, destroyShips } from './ComputerBoardAction';\nexport default function ComputerBoardReducer(state, action) {\n  if (state === undefined) {\n    return generateEmptyBoard();\n  }\n\n  if (action.type === \"CREATE_GAME_BOARD\") {\n    alert(\"created a game board!\");\n  }\n\n  if (action.type === 'onClick') {\n    const value = state[action.x][action.y]; //change state\n\n    const boardType = action.boardType;\n\n    if (boardType === 'player') {\n      return state;\n    }\n\n    if (value === 'sc') {\n      incrementCounter('scout');\n      checkIfAllShipsHit('scout') ? destroyShips(state, 'scout') : state[action.x][action.y] = 'O';\n    } else if (value === 'sb') {\n      incrementCounter('submarine');\n      checkIfAllShipsHit('submarine') ? destroyShips(state, 'submarine') : state[action.x][action.y] = 'O';\n    } else if (value === 'de') {\n      incrementCounter('destroyer');\n      checkIfAllShipsHit('destroyer') ? destroyShips(state, 'destroyer') : state[action.x][action.y] = 'O';\n    } else if (value === 'ac') {\n      incrementCounter('aircraft');\n      checkIfAllShipsHit('aircraft') ? destroyShips(state, 'aircraft') : state[action.x][action.y] = 'O';\n    } else if (value === 'O') {\n      state[action.x][action.y] = 'O';\n    } else {\n      state[action.x][action.y] = 'X';\n    } // check winning condition\n\n\n    return [...state];\n  }\n\n  if (action.type === 'RESET' || action.type === 'RESET_GAMEBOARD_ONLY') {\n    for (let i = 0; i < state.length; i++) {\n      for (let j = 0; j < state.length; j++) {\n        state[i][j] = '';\n      }\n    }\n\n    return [...state];\n  }\n\n  return state;\n}\n_c = ComputerBoardReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComputerBoardReducer\");","map":{"version":3,"sources":["/Users/sheetalturaga/JuliaHan-SheetalTuraga-BattleShip-Project2/other_implementation/src/reducers/ComputerBoardReducer.js"],"names":["generateEmptyBoard","incrementCounter","checkIfAllShipsHit","destroyShips","ComputerBoardReducer","state","action","undefined","type","alert","value","x","y","boardType","i","length","j"],"mappings":"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","sourcesContent":["//TODO\n//1. Generate ai player\n//2. turn sunk ships black GOOD\n//3. tracking GOOD and \n//4. return winner \n//5. two game modes, free play and normal game\n//6.Overlapping ships\nimport generateEmptyBoard from './ComputerBoardAction';\nimport {incrementCounter, checkIfAllShipsHit, destroyShips} from './ComputerBoardAction';\n\n\nexport default function ComputerBoardReducer(state, action) {\n    if (state === undefined) {\n        return generateEmptyBoard()\n    }\n    if (action.type === \"CREATE_GAME_BOARD\") {\n        alert(\"created a game board!\")\n    }\n    if (action.type === 'onClick') {\n        const value = state[action.x][action.y]; //change state\n        const boardType = action.boardType;\n        if (boardType === 'player') {\n            return state;\n        }\n        if (value === 'sc') {\n            incrementCounter('scout');\n            checkIfAllShipsHit('scout') ? destroyShips(state, 'scout') : state[action.x][action.y] = 'O';\n        } else if (value === 'sb') {\n            incrementCounter('submarine');\n            checkIfAllShipsHit('submarine') ? destroyShips(state, 'submarine') : state[action.x][action.y] = 'O';\n        } else if (value === 'de') {\n            incrementCounter('destroyer');\n            checkIfAllShipsHit('destroyer') ? destroyShips(state, 'destroyer') : state[action.x][action.y] = 'O';\n        } else if (value === 'ac') {\n            incrementCounter('aircraft');\n            checkIfAllShipsHit('aircraft') ? destroyShips(state, 'aircraft') : state[action.x][action.y] = 'O';\n        } else if (value === 'O') {\n            state[action.x][action.y] = 'O';\n        } else {\n            state[action.x][action.y] = 'X';\n        }\n        \n        \n        // check winning condition\n        return [...state];\n    }\n\n    if (action.type === 'RESET' || action.type === 'RESET_GAMEBOARD_ONLY') {\n        for (let i = 0; i < state.length; i++) {\n            for (let j = 0; j < state.length; j++){\n                state[i][j] = '';\n            }\n        }\n        return [...state];\n    }\n    return state;\n}\n"]},"metadata":{},"sourceType":"module"}