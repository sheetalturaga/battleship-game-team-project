{"ast":null,"code":"export var SPACE_LENGTH=100;export var SHIPS_OBJ={scout:2,submarine:3,destroyer:4,aircraft:5};export var MAP_OF_SHIP_COORDS={scout:[],submarine:[],destroyer:[],aircraft:[]};export var UNIQUE_IDS={scout:'sct',submarine:'sbe',destroyer:'der',aircraft:'act'};export var COUNTER={scout:0,submarine:0,destroyer:0,aircraft:0};export var DIRECTION_ARR=['horizontal','vertical'];export var AVAILABLE_SPACES=[];export var TRACKING_USED_SQUARE=[];var defaultState={count:0,gameBoard:[['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','','']],isComputerTurn:false};export default function generateEmptyBoard(){var defaultState={count:0,gameBoard:[['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','',''],['','','','','','','','','','']]};var gameBoardPlacerHolder=defaultState.gameBoard;for(var row=0;row<gameBoardPlacerHolder.length;row++){for(var column=0;column<gameBoardPlacerHolder.length;column++){AVAILABLE_SPACES.push([row,column]);}}for(var ship in SHIPS_OBJ){var directionForShip=DIRECTION_ARR[Math.floor(Math.random()*DIRECTION_ARR.length)];var horizontalCoord=generateRandomCoordinates(gameBoardPlacerHolder,SHIPS_OBJ[ship],directionForShip);var coordX=horizontalCoord[0];var coordY=horizontalCoord[1];while(!validCoordinate(coordX,coordY,SHIPS_OBJ[ship],directionForShip)){horizontalCoord=generateRandomCoordinates(gameBoardPlacerHolder,SHIPS_OBJ[ship],directionForShip);coordX=horizontalCoord[0];coordY=horizontalCoord[1];break;}if(directionForShip==='horizontal'){for(var i=coordX;i<coordX+SHIPS_OBJ[ship];i++){MAP_OF_SHIP_COORDS[ship].push([i,coordY]);var index=findIndexToDelete(i,coordY);AVAILABLE_SPACES.splice(index,1);defaultState.gameBoard[i][coordY]=UNIQUE_IDS[ship];if(MAP_OF_SHIP_COORDS[ship].length===3*SHIPS_OBJ[ship]){generateShipCoordinates(ship,SHIPS_OBJ[ship],MAP_OF_SHIP_COORDS[ship].length);}}}else{for(var _i=coordY;_i<coordY+SHIPS_OBJ[ship];_i++){MAP_OF_SHIP_COORDS[ship].push([coordX,_i]);var _index=findIndexToDelete(coordX,_i);AVAILABLE_SPACES.splice(_index,1);defaultState.gameBoard[coordX][_i]=UNIQUE_IDS[ship];if(MAP_OF_SHIP_COORDS[ship].length===3*SHIPS_OBJ[ship]){generateShipCoordinates(ship,SHIPS_OBJ[ship],MAP_OF_SHIP_COORDS[ship].length);}}}}return defaultState.gameBoard;}function findIndexToDelete(xCoord,yCoord){for(var i=0;i<SPACE_LENGTH;i++){if(AVAILABLE_SPACES[i]===[xCoord,yCoord]){return i;}}}function coordinateExists(xCoord,yCoord){for(var i=0;i<SPACE_LENGTH;i++){if(AVAILABLE_SPACES[i]===[xCoord,yCoord]){return true;}}return false;}export var validCoordinate=function validCoordinate(xCoord,yCoord,length,directionForShip){if(directionForShip==='horizontal'){for(var i=0;i<length;i++){if(!coordinateExists(xCoord,yCoord+i)){return false;}}return true;}else{for(var _i2=0;_i2<length;_i2++){if(!coordinateExists(xCoord+_i2,yCoord)){return false;}}return true;}};function generateShipCoordinates(ship,length,arrLength){MAP_OF_SHIP_COORDS[ship].splice(0,arrLength-length);}function generateRandomCoordinates(gameboard,length,directionForShip){var x=0;var y=0;if(directionForShip==='horizontal'){x=generateRandomNumber(0,gameboard.length-length);y=generateRandomNumber(0,gameboard.length-1);}else{x=generateRandomNumber(0,gameboard.length-1);y=generateRandomNumber(0,gameboard.length-length);}return[x,y];}export var generateRandomNumber=function generateRandomNumber(start,end){return Math.floor(Math.random()*(end-start+1)+start);};export var incrementCounter=function incrementCounter(ship){COUNTER[ship]+=1;};export var checkIfAllShipsHit=function checkIfAllShipsHit(ship){if(COUNTER[ship]===SHIPS_OBJ[ship]){return true;}};export var destroyShips=function destroyShips(state,ship){for(var i=0;i<SHIPS_OBJ[ship];i++){var coordX=MAP_OF_SHIP_COORDS[ship][i][0];var coordY=MAP_OF_SHIP_COORDS[ship][i][1];state[coordX][coordY]='S';}};export var addUsedSquare=function addUsedSquare(xCoord,yCoord){TRACKING_USED_SQUARE.push([xCoord,yCoord]);};export var checkIfValidCoordinate=function checkIfValidCoordinate(state,xCoord,yCoord){for(var i=0;i<TRACKING_USED_SQUARE.length;i++){if(TRACKING_USED_SQUARE[i][0]===xCoord&&TRACKING_USED_SQUARE[i][1]===yCoord){return false;}}return true;};","map":{"version":3,"sources":["/Users/sheetalturaga/JuliaHan-SheetalTuraga-BattleShip-Project2/other_implementation/src/reducers/PlayerBoardAction.js"],"names":["SPACE_LENGTH","SHIPS_OBJ","scout","submarine","destroyer","aircraft","MAP_OF_SHIP_COORDS","UNIQUE_IDS","COUNTER","DIRECTION_ARR","AVAILABLE_SPACES","TRACKING_USED_SQUARE","defaultState","count","gameBoard","isComputerTurn","generateEmptyBoard","gameBoardPlacerHolder","row","length","column","push","ship","directionForShip","Math","floor","random","horizontalCoord","generateRandomCoordinates","coordX","coordY","validCoordinate","i","index","findIndexToDelete","splice","generateShipCoordinates","xCoord","yCoord","coordinateExists","arrLength","gameboard","x","y","generateRandomNumber","start","end","incrementCounter","checkIfAllShipsHit","destroyShips","state","addUsedSquare","checkIfValidCoordinate"],"mappings":"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","sourcesContent":["export const SPACE_LENGTH = 100;\n\nexport const SHIPS_OBJ = {\n    scout: 2,\n    submarine: 3,\n    destroyer: 4,\n    aircraft: 5,\n}\n\nexport const MAP_OF_SHIP_COORDS = {\n    scout: [],\n    submarine: [],\n    destroyer: [],\n    aircraft: []\n}\n\nexport const UNIQUE_IDS = {\n    scout: 'sct',\n    submarine: 'sbe',\n    destroyer: 'der',\n    aircraft: 'act'\n}\n\nexport const COUNTER = {\n    scout: 0,\n    submarine: 0,\n    destroyer: 0,\n    aircraft: 0\n}\n\nexport const DIRECTION_ARR = ['horizontal', 'vertical'];\n\nexport const AVAILABLE_SPACES = [];\n\nexport const TRACKING_USED_SQUARE = [];\n\nconst defaultState = {\n    count: 0,\n    gameBoard: [['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', ''], \n    ['', '', '', '', '', '', '', '', '', ''],\n    ['', '', '', '', '', '', '', '', '', '']],         \n    isComputerTurn:false\n}\n\nexport default function generateEmptyBoard() {\n    let defaultState = {\n        count: 0,\n        gameBoard: [['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', '']],\n    }\n\n    let gameBoardPlacerHolder = defaultState.gameBoard;\n    for (let row = 0; row < gameBoardPlacerHolder.length; row++) {\n        for (let column = 0; column < gameBoardPlacerHolder.length; column++) {\n            AVAILABLE_SPACES.push([row, column]);\n        }\n    }\n\n    for (let ship in SHIPS_OBJ) {\n        let directionForShip = DIRECTION_ARR[Math.floor((Math.random()*DIRECTION_ARR.length))];\n        let horizontalCoord = generateRandomCoordinates(gameBoardPlacerHolder, SHIPS_OBJ[ship], directionForShip);\n        let coordX = horizontalCoord[0];\n        let coordY = horizontalCoord[1];\n        while (!validCoordinate(coordX, coordY, SHIPS_OBJ[ship], directionForShip)) {\n            horizontalCoord = generateRandomCoordinates(gameBoardPlacerHolder, SHIPS_OBJ[ship], directionForShip);\n            coordX = horizontalCoord[0];\n            coordY = horizontalCoord[1];\n            break;\n        } \n        if (directionForShip === 'horizontal') {\n            for (let i = coordX; i < coordX + SHIPS_OBJ[ship]; i++) {\n                MAP_OF_SHIP_COORDS[ship].push([i, coordY]);\n                let index = findIndexToDelete(i, coordY);\n                AVAILABLE_SPACES.splice(index, 1);\n                defaultState.gameBoard[i][coordY] = UNIQUE_IDS[ship];\n                if (MAP_OF_SHIP_COORDS[ship].length === 3 * SHIPS_OBJ[ship]) {\n                    generateShipCoordinates(ship, SHIPS_OBJ[ship], MAP_OF_SHIP_COORDS[ship].length);\n                }\n            } \n        }else {\n            for (let i = coordY; i < coordY + SHIPS_OBJ[ship]; i++) {\n                MAP_OF_SHIP_COORDS[ship].push([coordX, i]);\n                let index = findIndexToDelete(coordX, i);\n                AVAILABLE_SPACES.splice(index, 1);\n                defaultState.gameBoard[coordX][i] = UNIQUE_IDS[ship];\n                if (MAP_OF_SHIP_COORDS[ship].length === 3 * SHIPS_OBJ[ship]) {\n                    generateShipCoordinates(ship, SHIPS_OBJ[ship], MAP_OF_SHIP_COORDS[ship].length);\n                }\n            }\n        }\n    }\n\n    return defaultState.gameBoard;\n}\n\nfunction findIndexToDelete(xCoord, yCoord) {\n    for (let i = 0; i < SPACE_LENGTH; i++) {\n        if (AVAILABLE_SPACES[i] === [xCoord, yCoord]) {\n            return i;\n        }\n    }\n}\n\nfunction coordinateExists(xCoord, yCoord) {\n    for (let i = 0; i < SPACE_LENGTH; i++) {\n        if (AVAILABLE_SPACES[i] === [xCoord, yCoord]) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport const validCoordinate = (xCoord, yCoord, length, directionForShip) => {\n    if (directionForShip === 'horizontal') {\n        for (let i = 0; i < length; i++) {\n            if (!coordinateExists(xCoord, yCoord + i)) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        for (let i = 0; i < length; i++) {\n            if (!coordinateExists(xCoord + i, yCoord)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nfunction generateShipCoordinates(ship, length, arrLength) {\n        MAP_OF_SHIP_COORDS[ship].splice(0, arrLength - length); \n}\n\nfunction generateRandomCoordinates(gameboard, length, directionForShip){\n    let x = 0;\n    let y = 0;\n    if (directionForShip === 'horizontal') {\n        x = generateRandomNumber(0, gameboard.length - length);\n        y = generateRandomNumber(0, gameboard.length - 1);\n    }\n    else {\n        x = generateRandomNumber(0, gameboard.length - 1);\n        y = generateRandomNumber(0, gameboard.length - length);\n    }\n\n    return [x, y]\n}\n\nexport const generateRandomNumber = (start, end) => {\n    return Math.floor(Math.random() * (end - start + 1) + start);\n}\n\nexport const incrementCounter = (ship) => {\n    COUNTER[ship] += 1;\n}\n\nexport const checkIfAllShipsHit = (ship) => {\n    if (COUNTER[ship] === SHIPS_OBJ[ship]) {\n        return true;\n    }\n}\n\nexport const destroyShips = (state, ship) => {\n    for (let i = 0; i < SHIPS_OBJ[ship]; i++) {\n        let coordX = MAP_OF_SHIP_COORDS[ship][i][0];\n        let coordY = MAP_OF_SHIP_COORDS[ship][i][1];\n        state[coordX][coordY] = 'S';\n    }\n}\n\nexport const addUsedSquare = (xCoord, yCoord) => {\n    TRACKING_USED_SQUARE.push([xCoord, yCoord]);\n}\n\nexport const checkIfValidCoordinate = (state, xCoord, yCoord) => {\n    for (let i = 0; i < TRACKING_USED_SQUARE.length; i++) {\n        if (TRACKING_USED_SQUARE[i][0] === xCoord && TRACKING_USED_SQUARE[i][1] === yCoord) {\n            return false;\n        }\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}